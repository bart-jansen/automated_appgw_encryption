{
  "$schema": "http://schemas.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "metadata": {
        "description": "The name of the function app that you wish to create."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "appGwDomain": {
      "type": "string",
      "metadata": {
        "description": "FQDN of application gateway (url to get SSL certificate for)"
      }
    },
    "appGwName": {
      "type": "string",
      "metadata": {
        "description": "Resource name of application gateway"
      }
    },
    "appGwRg": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Resource group name where application gateway is deployed."
      }
    },
    "appGwSslEmail": {
      "type": "string",
      "defaultValue": "example@domain.com",
      "metadata": {
        "description": "Email address for letsencrypt bot."
      }
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Resourc name of the keyvault"
      }
    }
  },
  "variables": {
    "repoURL": "https://github.com/bart-jansen/automated_appgw_encryption.git",
    "repoFolder": "AzureFunctions",
    "repoBranch": "master",
    "functionAppName": "[parameters('appName')]",
    "hostingPlanName": "[concat(parameters('appName'), '-plan')]",
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'functions')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2015-04-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[parameters('location')]",
      "kind": "linux",
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "sku": "Standard",
        "workerSize": "0",
        "hostingEnvironment": "",
        "numberOfWorkers": 1
      }
    },
    {
      "apiVersion": "2015-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },    
      "properties": {
        "name": "[variables('functionAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "hostingEnvironment": "",
        "clientAffinityEnabled": false,
        "siteConfig": {
          "alwaysOn": true,
          "appSettings": [
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';')]"
            },
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';')]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "node"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "8.11.1"
            },
            {
              "name": "Project",
              "value": "[variables('repoFolder')]"
            },
            {
              "name": "APPGW_DOMAIN",
              "value": "[parameters('appGwDomain')]"
            },
            {
              "name": "APPGW_NAME",
              "value": "[parameters('appGwName')]"
            },
            {
              "name": "APPGW_RG",
              "value": "[parameters('appGwRg')]"
            },
            {
              "name": "EMAIL_CERT",
              "value": "[parameters('appGwSslEmail')]"
            },
            {
              "name": "KEYVAULT_NAME",
              "value": "[parameters('keyVaultName')]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('functionAppName'))]"
          ],
          "properties": {
            "RepoUrl": "[variables('repoURL')]",
            "branch": "[variables('repoBranch')]",
            "IsManualIntegration": true
          }
        }
      ]
    }
  ],
  "outputs": {
    "principalId": {
      "value": "[reference(concat('Microsoft.Web/sites/', variables('functionAppName')), '2016-08-01', 'Full').identity.principalId]",
      "type": "string"
    },
    "tenantId": {
      "value": "[subscription().tenantId]",
      "type": "string"
    }
  }
}