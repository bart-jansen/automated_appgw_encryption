{
    "$schema": "http://schemas.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "functionAppName": {
            "type": "string",
            "metadata": {
                "description": "The name of the function app that you wish to create."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "appGwName": {
            "type": "string",
            "defaultValue": "appgw",
            "metadata": {
                "description": "Resource name of application gateway"
            }
        },
        "appGwRg": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Resource group name where application gateway is deployed."
            }
        },
        "appGwSslEmail": {
            "type": "string",
            "defaultValue": "example@domain.com",
            "metadata": {
                "description": "Email address for letsencrypt bot."
            }
        },
        "keyVaultName": {
            "type": "string",
            "metadata": {
                "description": "Resource name of the keyvault"
            }
        }
    },
    "variables": {
        "hostingPlanName": "[concat(parameters('functionAppName'), '-plan')]",
        "identityName": "aci-user",
        "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'functions')]"
    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "name": "[variables('identityName')]",
            "apiVersion": "2015-08-31-preview",
            "location": "[resourceGroup().location]"
        },
        {
            "apiVersion": "2019-06-01",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[variables('hostingPlanName')]",
            "location": "[parameters('location')]",
            "kind": "linux",
            "properties": {
                "name": "[variables('hostingPlanName')]",
                "numberOfWorkers": "1",
                "workerSizeId": "0",
                "reserved": true
            },
            "sku": {
                "name": "B1",
                "tier": "Basic"
            }
        },
        {
            "apiVersion": "2018-02-01",
            "type": "Microsoft.Web/sites",
            "name": "[parameters('functionAppName')]",
            "location": "[parameters('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "kind": "functionapp,linux,container",
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "clientAffinityEnabled": false,
                "siteConfig": {
                    "appCommandLine": "",
                    "linuxFxVersion": "DOCKER|bartmsft/appgw-ssl-fn:v1.0.0"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "resources": [
                {
                    "apiVersion": "2016-08-01",
                    "name": "appsettings",
                    "type": "config",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                    ],
                    "properties": {
                        "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';')]",
                        "WEBSITES_ENABLE_APP_SERVICE_STORAGE": "false",
                        "DOCKER_REGISTRY_SERVER_URL": "https://index.docker.io", 
                        "FUNCTIONS_EXTENSION_VERSION": "~2",
                        "AzureWebJobsSecretStorageType": "files",
                        "FUNCTIONS_WORKER_RUNTIME": "node",
                        "WEBSITE_NODE_DEFAULT_VERSION": "10.14.1",
                        "APPGW_NAME": "[parameters('appGwName')]",
                        "APPGW_RG": "[parameters('appGwRg')]",
                        "EMAIL_CERT": "[parameters('appGwSslEmail')]",
                        "KEYVAULT_NAME": "[parameters('keyVaultName')]"
                    }
                }
            ]
        }
    ],
    "outputs": {
        "principalId": {
            "value": "[reference(concat('Microsoft.Web/sites/', parameters('functionAppName')), '2016-08-01', 'Full').identity.principalId]",
            "type": "string"
        },
        "identityName": {
            "value": "[variables('identityName')]",
            "type": "string"
        }
    }
}
